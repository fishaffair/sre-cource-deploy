apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: deploy
spec:
  replicas: 3
  selector:
    matchLabels:
      project: app
  template:
    metadata:
      labels:
        project: app
    spec:
      containers:
        - name: app
          image: ghcr.io/ldest/sre-course/api:latest
          ports:
            - containerPort: 80
          env:
          - name: DOTNET_ENVIRONMENT
            value: "{{ .Values.DOTNET_ENVIRONMENT}}"
          - name: CONNECTIONSTRINGS__PGCONNECTION
            value: "server={{ .Values.PGIP }}; port={{ .Values.PGPORT }}; database=weather; user id={{ .Values.PGID }}; password={{ .Values.PGPASS }};"
          resources:
            limits:
              cpu: "250m"
              memory: "128Mi"
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    app: deploy
spec:
  selector:
    project: app
  ports:
    - name: app-listener
      protocol: TCP
      port: 80 # load balancer port
      targetPort: 80 # pod port
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  labels:
    app: deploy
spec:
  rules:
  - host: app.test
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-service
            port:
              number: 80
  ingressClassName: nginx